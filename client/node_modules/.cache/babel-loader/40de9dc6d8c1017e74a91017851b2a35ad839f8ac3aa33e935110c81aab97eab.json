{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5002/api';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const login = (email, password) => api.post('/auth/login', {\n  email,\n  password\n});\nexport const register = (name, email, password) => api.post('/auth/register', {\n  name,\n  email,\n  password\n});\n\n// Prints API\nexport const getPrints = () => api.get('/prints');\nexport const searchPrints = query => api.get(`/prints/search?query=${encodeURIComponent(query)}`);\nexport const uploadPrints = file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return api.post('/prints/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const addPrint = print => api.post('/prints', print);\nexport const updatePrint = (id, print) => api.put(`/prints/${id}`, print);\nexport const deletePrint = id => api.delete(`/prints/${id}`);\n\n// Orders API\nexport const getOrders = () => api.get('/orders');\nexport const getAllOrders = () => api.get('/orders/all');\nexport const createOrder = order => api.post('/orders', order);\nexport const updateOrder = (id, order) => api.put(`/orders/${id}`, order);\nexport const updateOrderStatus = (id, status) => api.put(`/orders/${id}/status`, {\n  status\n});\nexport const deleteOrder = id => api.delete(`/orders/${id}`);\n\n// Users API\nexport const getUserProfile = () => api.get('/users/profile');\nexport const updateUserProfile = profile => api.put('/users/profile', profile);\nexport const getUserCount = () => api.get('/users/count');\n\n// Settings API\nexport const getSettings = () => api.get('/settings');\nexport const updateAnnouncement = header => api.put('/settings/announcement', {\n  header\n});\nexport const updateHowToUse = text => api.put('/settings/how-to-use', {\n  text\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","email","password","post","register","name","getPrints","get","searchPrints","query","encodeURIComponent","uploadPrints","file","formData","FormData","append","addPrint","print","updatePrint","id","put","deletePrint","delete","getOrders","getAllOrders","createOrder","order","updateOrder","updateOrderStatus","status","deleteOrder","getUserProfile","updateUserProfile","profile","getUserCount","getSettings","updateAnnouncement","header","updateHowToUse","text"],"sources":["C:/Users/admin/CascadeProjects/print-catalog-app/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5002/api';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const login = (email, password) => api.post('/auth/login', { email, password });\nexport const register = (name, email, password) => api.post('/auth/register', { name, email, password });\n\n// Prints API\nexport const getPrints = () => api.get('/prints');\nexport const searchPrints = (query) => api.get(`/prints/search?query=${encodeURIComponent(query)}`);\nexport const uploadPrints = (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return api.post('/prints/upload', formData, {\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n};\nexport const addPrint = (print) => api.post('/prints', print);\nexport const updatePrint = (id, print) => api.put(`/prints/${id}`, print);\nexport const deletePrint = (id) => api.delete(`/prints/${id}`);\n\n// Orders API\nexport const getOrders = () => api.get('/orders');\nexport const getAllOrders = () => api.get('/orders/all');\nexport const createOrder = (order) => api.post('/orders', order);\nexport const updateOrder = (id, order) => api.put(`/orders/${id}`, order);\nexport const updateOrderStatus = (id, status) => api.put(`/orders/${id}/status`, { status });\nexport const deleteOrder = (id) => api.delete(`/orders/${id}`);\n\n// Users API\nexport const getUserProfile = () => api.get('/users/profile');\nexport const updateUserProfile = (profile) => api.put('/users/profile', profile);\nexport const getUserCount = () => api.get('/users/count');\n\n// Settings API\nexport const getSettings = () => api.get('/settings');\nexport const updateAnnouncement = (header) => api.put('/settings/announcement', { header });\nexport const updateHowToUse = (text) => api.put('/settings/how-to-use', { text });\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAKd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAE;EAAEF,KAAK;EAAEC;AAAS,CAAC,CAAC;AACtF,OAAO,MAAME,QAAQ,GAAGA,CAACC,IAAI,EAAEJ,KAAK,EAAEC,QAAQ,KAAKd,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAE;EAAEE,IAAI;EAAEJ,KAAK;EAAEC;AAAS,CAAC,CAAC;;AAExG;AACA,OAAO,MAAMI,SAAS,GAAGA,CAAA,KAAMlB,GAAG,CAACmB,GAAG,CAAC,SAAS,CAAC;AACjD,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAKrB,GAAG,CAACmB,GAAG,CAAC,wBAAwBG,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;AACnG,OAAO,MAAME,YAAY,GAAIC,IAAI,IAAK;EACpC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,OAAOxB,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAEU,QAAQ,EAAE;IAC1CtB,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMyB,QAAQ,GAAIC,KAAK,IAAK7B,GAAG,CAACe,IAAI,CAAC,SAAS,EAAEc,KAAK,CAAC;AAC7D,OAAO,MAAMC,WAAW,GAAGA,CAACC,EAAE,EAAEF,KAAK,KAAK7B,GAAG,CAACgC,GAAG,CAAC,WAAWD,EAAE,EAAE,EAAEF,KAAK,CAAC;AACzE,OAAO,MAAMI,WAAW,GAAIF,EAAE,IAAK/B,GAAG,CAACkC,MAAM,CAAC,WAAWH,EAAE,EAAE,CAAC;;AAE9D;AACA,OAAO,MAAMI,SAAS,GAAGA,CAAA,KAAMnC,GAAG,CAACmB,GAAG,CAAC,SAAS,CAAC;AACjD,OAAO,MAAMiB,YAAY,GAAGA,CAAA,KAAMpC,GAAG,CAACmB,GAAG,CAAC,aAAa,CAAC;AACxD,OAAO,MAAMkB,WAAW,GAAIC,KAAK,IAAKtC,GAAG,CAACe,IAAI,CAAC,SAAS,EAAEuB,KAAK,CAAC;AAChE,OAAO,MAAMC,WAAW,GAAGA,CAACR,EAAE,EAAEO,KAAK,KAAKtC,GAAG,CAACgC,GAAG,CAAC,WAAWD,EAAE,EAAE,EAAEO,KAAK,CAAC;AACzE,OAAO,MAAME,iBAAiB,GAAGA,CAACT,EAAE,EAAEU,MAAM,KAAKzC,GAAG,CAACgC,GAAG,CAAC,WAAWD,EAAE,SAAS,EAAE;EAAEU;AAAO,CAAC,CAAC;AAC5F,OAAO,MAAMC,WAAW,GAAIX,EAAE,IAAK/B,GAAG,CAACkC,MAAM,CAAC,WAAWH,EAAE,EAAE,CAAC;;AAE9D;AACA,OAAO,MAAMY,cAAc,GAAGA,CAAA,KAAM3C,GAAG,CAACmB,GAAG,CAAC,gBAAgB,CAAC;AAC7D,OAAO,MAAMyB,iBAAiB,GAAIC,OAAO,IAAK7C,GAAG,CAACgC,GAAG,CAAC,gBAAgB,EAAEa,OAAO,CAAC;AAChF,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM9C,GAAG,CAACmB,GAAG,CAAC,cAAc,CAAC;;AAEzD;AACA,OAAO,MAAM4B,WAAW,GAAGA,CAAA,KAAM/C,GAAG,CAACmB,GAAG,CAAC,WAAW,CAAC;AACrD,OAAO,MAAM6B,kBAAkB,GAAIC,MAAM,IAAKjD,GAAG,CAACgC,GAAG,CAAC,wBAAwB,EAAE;EAAEiB;AAAO,CAAC,CAAC;AAC3F,OAAO,MAAMC,cAAc,GAAIC,IAAI,IAAKnD,GAAG,CAACgC,GAAG,CAAC,sBAAsB,EAAE;EAAEmB;AAAK,CAAC,CAAC;AAEjF,eAAenD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}